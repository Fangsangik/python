"""
멀티 스레드 개념
멀티 프로세스 개념
멀티 스레드 vs 멀티 프로세스
사용 이유

1. 프로세스
- 운영체제에서 할당 받는 자원의 단위 (실행 중인 프로그램)
- CPU 동작, 주소공간 (독립적)
- Code , Data, Stack, Heap 영역 독립작
- 최소 한개의 Main Thread 포함
- 파이프, 파일, 소켓등을 사용해서 프로세스간 통신 (cost가 높다) -> Context Switching 비용이 높다

2. 스레드
- 프로세스 내에서 실행 흐름 자원의 단위 (실행의 단위)
- 프로세스 자원 사용
- 하나의 프로세스 내에서 Stack만 별도 사용, 나머지는 공유(Code, Data, Heap 영역 공유)
- 메모리 공유 (변수 공유)
- 한 스레드의 결과가 다른 스레드 영향을 끼친다
- 동기화 문제는 정말 주의 -> debuging이 어렵다

3. 멀티 스레드
- 한개의 단일 어플리케이션 (응용 프로그램) -> 여러개의 스레드가 동시에 작업 수행
- 시스템 자원 소모 감소
- 효율성, 처리량 증가 -> cost 감소
- 통신 부담 감소, 디버깅 어려움, 단이 프로세스에는 효과 미약, 자원의 공유 문제(deadlock), 프로세스에 영향

7. 멀티 프로세스
- 한개의 단일 어플리케이션 (응용 프로그램) -> 여러개의 프로세스가 동시에 작업 수행
- 한개의 프로세스 문제는 확산 없음 (kill)
- cache chainge -> cost가 많이 든다 (메모리, CPU), 복잡한 통신 비용
"""